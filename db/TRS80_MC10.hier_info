|MC10
RST => reset.DATAIN
Clk => Clk.IN1
TAPE_IN => TAPE_S.DATAIN
button[0] => button_s[0].DATAIN
button[1] => button_s[1].DATAIN
button[2] => button_s[2].DATAIN
button[3] => button_s[3].DATAIN
TAPE_OUT <= MC6803_gen2:CPU0.PORT_B_OUT[0]
SEG_SEL[0] <= MULTIPLEXED_HEX_DRIVER:multiHEX.SEG_SEL[0]
SEG_SEL[1] <= MULTIPLEXED_HEX_DRIVER:multiHEX.SEG_SEL[1]
SEG_SEL[2] <= MULTIPLEXED_HEX_DRIVER:multiHEX.SEG_SEL[2]
SEG_SEL[3] <= MULTIPLEXED_HEX_DRIVER:multiHEX.SEG_SEL[3]
LED[0] <= <VCC>
LED[1] <= <VCC>
LED[2] <= <VCC>
LED[3] <= TAPE_S.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[0] <= MULTIPLEXED_HEX_DRIVER:multiHEX.HEX_OUT[0]
HEX_OUT[1] <= MULTIPLEXED_HEX_DRIVER:multiHEX.HEX_OUT[1]
HEX_OUT[2] <= MULTIPLEXED_HEX_DRIVER:multiHEX.HEX_OUT[2]
HEX_OUT[3] <= MULTIPLEXED_HEX_DRIVER:multiHEX.HEX_OUT[3]
HEX_OUT[4] <= MULTIPLEXED_HEX_DRIVER:multiHEX.HEX_OUT[4]
HEX_OUT[5] <= MULTIPLEXED_HEX_DRIVER:multiHEX.HEX_OUT[5]
HEX_OUT[6] <= MULTIPLEXED_HEX_DRIVER:multiHEX.HEX_OUT[6]
beep <= <VCC>
R <= MC6847_gen3:VDG.R
G <= MC6847_gen3:VDG.G
B <= MC6847_gen3:VDG.B
HSYNC <= MC6847_gen3:VDG.HSYNC
VSYNC <= MC6847_gen3:VDG.VSYNC
audio <= VDG_control[5].DB_MAX_OUTPUT_PORT_TYPE
ps2_clk => ps2_clk_s.DATAIN
ps2_data => ps2_data_s.DATAIN
SDRAM_CLK <= PLL0:PLL_inst.c3
SDRAM_CKE <= SDRAM_controller:SDRAM_inst.SDRAM_CKE
SDRAM_CSn <= SDRAM_controller:SDRAM_inst.SDRAM_CSn
SDRAM_WREn <= SDRAM_controller:SDRAM_inst.SDRAM_WREn
SDRAM_CASn <= SDRAM_controller:SDRAM_inst.SDRAM_CASn
SDRAM_RASn <= SDRAM_controller:SDRAM_inst.SDRAM_RASn
SDRAM_A[0] <= SDRAM_controller:SDRAM_inst.SDRAM_A[0]
SDRAM_A[1] <= SDRAM_controller:SDRAM_inst.SDRAM_A[1]
SDRAM_A[2] <= SDRAM_controller:SDRAM_inst.SDRAM_A[2]
SDRAM_A[3] <= SDRAM_controller:SDRAM_inst.SDRAM_A[3]
SDRAM_A[4] <= SDRAM_controller:SDRAM_inst.SDRAM_A[4]
SDRAM_A[5] <= SDRAM_controller:SDRAM_inst.SDRAM_A[5]
SDRAM_A[6] <= SDRAM_controller:SDRAM_inst.SDRAM_A[6]
SDRAM_A[7] <= SDRAM_controller:SDRAM_inst.SDRAM_A[7]
SDRAM_A[8] <= SDRAM_controller:SDRAM_inst.SDRAM_A[8]
SDRAM_A[9] <= SDRAM_controller:SDRAM_inst.SDRAM_A[9]
SDRAM_A[10] <= SDRAM_controller:SDRAM_inst.SDRAM_A[10]
SDRAM_A[11] <= SDRAM_controller:SDRAM_inst.SDRAM_A[11]
SDRAM_BA[0] <= SDRAM_controller:SDRAM_inst.SDRAM_BA[0]
SDRAM_BA[1] <= SDRAM_controller:SDRAM_inst.SDRAM_BA[1]
SDRAM_DQM[0] <= SDRAM_controller:SDRAM_inst.SDRAM_DQM[0]
SDRAM_DQM[1] <= SDRAM_controller:SDRAM_inst.SDRAM_DQM[1]
SDRAM_DQ[0] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[0]
SDRAM_DQ[1] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[1]
SDRAM_DQ[2] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[2]
SDRAM_DQ[3] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[3]
SDRAM_DQ[4] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[4]
SDRAM_DQ[5] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[5]
SDRAM_DQ[6] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[6]
SDRAM_DQ[7] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[7]
SDRAM_DQ[8] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[8]
SDRAM_DQ[9] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[9]
SDRAM_DQ[10] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[10]
SDRAM_DQ[11] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[11]
SDRAM_DQ[12] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[12]
SDRAM_DQ[13] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[13]
SDRAM_DQ[14] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[14]
SDRAM_DQ[15] <> SDRAM_controller:SDRAM_inst.SDRAM_DQ[15]


|MC10|PLL0:PLL_inst
inclk0 => sub_wire6[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk
c3 <= altpll:altpll_component.clk


|MC10|PLL0:PLL_inst|altpll:altpll_component
inclk[0] => PLL0_altpll:auto_generated.inclk[0]
inclk[1] => PLL0_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|MC10|PLL0:PLL_inst|altpll:altpll_component|PLL0_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|MC10|ROM:ROM_inst
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
address[10] => address[10].IN1
address[11] => address[11].IN1
address[12] => address[12].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|MC10|ROM:ROM_inst|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_fq91:auto_generated.address_a[0]
address_a[1] => altsyncram_fq91:auto_generated.address_a[1]
address_a[2] => altsyncram_fq91:auto_generated.address_a[2]
address_a[3] => altsyncram_fq91:auto_generated.address_a[3]
address_a[4] => altsyncram_fq91:auto_generated.address_a[4]
address_a[5] => altsyncram_fq91:auto_generated.address_a[5]
address_a[6] => altsyncram_fq91:auto_generated.address_a[6]
address_a[7] => altsyncram_fq91:auto_generated.address_a[7]
address_a[8] => altsyncram_fq91:auto_generated.address_a[8]
address_a[9] => altsyncram_fq91:auto_generated.address_a[9]
address_a[10] => altsyncram_fq91:auto_generated.address_a[10]
address_a[11] => altsyncram_fq91:auto_generated.address_a[11]
address_a[12] => altsyncram_fq91:auto_generated.address_a[12]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_fq91:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_fq91:auto_generated.q_a[0]
q_a[1] <= altsyncram_fq91:auto_generated.q_a[1]
q_a[2] <= altsyncram_fq91:auto_generated.q_a[2]
q_a[3] <= altsyncram_fq91:auto_generated.q_a[3]
q_a[4] <= altsyncram_fq91:auto_generated.q_a[4]
q_a[5] <= altsyncram_fq91:auto_generated.q_a[5]
q_a[6] <= altsyncram_fq91:auto_generated.q_a[6]
q_a[7] <= altsyncram_fq91:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MC10|ROM:ROM_inst|altsyncram:altsyncram_component|altsyncram_fq91:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
address_a[10] => ram_block1a0.PORTAADDR10
address_a[10] => ram_block1a1.PORTAADDR10
address_a[10] => ram_block1a2.PORTAADDR10
address_a[10] => ram_block1a3.PORTAADDR10
address_a[10] => ram_block1a4.PORTAADDR10
address_a[10] => ram_block1a5.PORTAADDR10
address_a[10] => ram_block1a6.PORTAADDR10
address_a[10] => ram_block1a7.PORTAADDR10
address_a[11] => ram_block1a0.PORTAADDR11
address_a[11] => ram_block1a1.PORTAADDR11
address_a[11] => ram_block1a2.PORTAADDR11
address_a[11] => ram_block1a3.PORTAADDR11
address_a[11] => ram_block1a4.PORTAADDR11
address_a[11] => ram_block1a5.PORTAADDR11
address_a[11] => ram_block1a6.PORTAADDR11
address_a[11] => ram_block1a7.PORTAADDR11
address_a[12] => ram_block1a0.PORTAADDR12
address_a[12] => ram_block1a1.PORTAADDR12
address_a[12] => ram_block1a2.PORTAADDR12
address_a[12] => ram_block1a3.PORTAADDR12
address_a[12] => ram_block1a4.PORTAADDR12
address_a[12] => ram_block1a5.PORTAADDR12
address_a[12] => ram_block1a6.PORTAADDR12
address_a[12] => ram_block1a7.PORTAADDR12
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|MC10|SDRAM_controller:SDRAM_inst
clk => refresh_flag_2.CLK
clk => A_data_out[0]~reg0.CLK
clk => A_data_out[1]~reg0.CLK
clk => A_data_out[2]~reg0.CLK
clk => A_data_out[3]~reg0.CLK
clk => A_data_out[4]~reg0.CLK
clk => A_data_out[5]~reg0.CLK
clk => A_data_out[6]~reg0.CLK
clk => A_data_out[7]~reg0.CLK
clk => A_data_out[8]~reg0.CLK
clk => A_data_out[9]~reg0.CLK
clk => A_data_out[10]~reg0.CLK
clk => A_data_out[11]~reg0.CLK
clk => A_data_out[12]~reg0.CLK
clk => A_data_out[13]~reg0.CLK
clk => A_data_out[14]~reg0.CLK
clk => A_data_out[15]~reg0.CLK
clk => B_address_hold[0].CLK
clk => B_address_hold[1].CLK
clk => B_address_hold[2].CLK
clk => B_address_hold[3].CLK
clk => B_address_hold[4].CLK
clk => B_address_hold[5].CLK
clk => B_address_hold[6].CLK
clk => B_address_hold[7].CLK
clk => B_data_out[0]~reg0.CLK
clk => B_data_out[1]~reg0.CLK
clk => B_data_out[2]~reg0.CLK
clk => B_data_out[3]~reg0.CLK
clk => B_data_out[4]~reg0.CLK
clk => B_data_out[5]~reg0.CLK
clk => B_data_out[6]~reg0.CLK
clk => B_data_out[7]~reg0.CLK
clk => B_data_out[8]~reg0.CLK
clk => B_data_out[9]~reg0.CLK
clk => B_data_out[10]~reg0.CLK
clk => B_data_out[11]~reg0.CLK
clk => B_data_out[12]~reg0.CLK
clk => B_data_out[13]~reg0.CLK
clk => B_data_out[14]~reg0.CLK
clk => B_data_out[15]~reg0.CLK
clk => BA_hold[0].CLK
clk => BA_hold[1].CLK
clk => A_data_hold[0].CLK
clk => A_data_hold[1].CLK
clk => A_data_hold[2].CLK
clk => A_data_hold[3].CLK
clk => A_data_hold[4].CLK
clk => A_data_hold[5].CLK
clk => A_data_hold[6].CLK
clk => A_data_hold[7].CLK
clk => A_data_hold[8].CLK
clk => A_data_hold[9].CLK
clk => A_data_hold[10].CLK
clk => A_data_hold[11].CLK
clk => A_data_hold[12].CLK
clk => A_data_hold[13].CLK
clk => A_data_hold[14].CLK
clk => A_data_hold[15].CLK
clk => A_address_hold[0].CLK
clk => A_address_hold[1].CLK
clk => A_address_hold[2].CLK
clk => A_address_hold[3].CLK
clk => A_address_hold[4].CLK
clk => A_address_hold[5].CLK
clk => A_address_hold[6].CLK
clk => A_address_hold[7].CLK
clk => SDRAM_BA[0]~reg0.CLK
clk => SDRAM_BA[1]~reg0.CLK
clk => SDRAM_A[0]~reg0.CLK
clk => SDRAM_A[1]~reg0.CLK
clk => SDRAM_A[2]~reg0.CLK
clk => SDRAM_A[3]~reg0.CLK
clk => SDRAM_A[4]~reg0.CLK
clk => SDRAM_A[5]~reg0.CLK
clk => SDRAM_A[6]~reg0.CLK
clk => SDRAM_A[7]~reg0.CLK
clk => SDRAM_A[8]~reg0.CLK
clk => SDRAM_A[9]~reg0.CLK
clk => SDRAM_A[10]~reg0.CLK
clk => SDRAM_A[11]~reg0.CLK
clk => SDRAM_CMD[0].CLK
clk => SDRAM_CMD[1].CLK
clk => SDRAM_CMD[2].CLK
clk => SDRAM_DQM[0]~reg0.CLK
clk => SDRAM_DQM[1]~reg0.CLK
clk => refresh_flag.CLK
clk => prev_HSYNC.CLK
clk => gate_out.CLK
clk => state~1.DATAIN
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => gate_out.OUTPUTSELECT
reset => state.S_reset.DATAIN
reset => A_data_out[10]~reg0.ENA
reset => A_data_out[9]~reg0.ENA
reset => A_data_out[8]~reg0.ENA
reset => A_data_out[7]~reg0.ENA
reset => A_data_out[6]~reg0.ENA
reset => A_data_out[5]~reg0.ENA
reset => A_data_out[4]~reg0.ENA
reset => A_data_out[3]~reg0.ENA
reset => A_data_out[2]~reg0.ENA
reset => A_data_out[1]~reg0.ENA
reset => A_data_out[0]~reg0.ENA
reset => refresh_flag_2.ENA
reset => A_data_out[11]~reg0.ENA
reset => A_data_out[12]~reg0.ENA
reset => A_data_out[13]~reg0.ENA
reset => A_data_out[14]~reg0.ENA
reset => A_data_out[15]~reg0.ENA
reset => B_address_hold[0].ENA
reset => B_address_hold[1].ENA
reset => B_address_hold[2].ENA
reset => B_address_hold[3].ENA
reset => B_address_hold[4].ENA
reset => B_address_hold[5].ENA
reset => B_address_hold[6].ENA
reset => B_address_hold[7].ENA
reset => B_data_out[0]~reg0.ENA
reset => B_data_out[1]~reg0.ENA
reset => B_data_out[2]~reg0.ENA
reset => B_data_out[3]~reg0.ENA
reset => B_data_out[4]~reg0.ENA
reset => B_data_out[5]~reg0.ENA
reset => B_data_out[6]~reg0.ENA
reset => B_data_out[7]~reg0.ENA
reset => B_data_out[8]~reg0.ENA
reset => B_data_out[9]~reg0.ENA
reset => B_data_out[10]~reg0.ENA
reset => B_data_out[11]~reg0.ENA
reset => B_data_out[12]~reg0.ENA
reset => B_data_out[13]~reg0.ENA
reset => B_data_out[14]~reg0.ENA
reset => B_data_out[15]~reg0.ENA
reset => BA_hold[0].ENA
reset => BA_hold[1].ENA
reset => A_data_hold[0].ENA
reset => A_data_hold[1].ENA
reset => A_data_hold[2].ENA
reset => A_data_hold[3].ENA
reset => A_data_hold[4].ENA
reset => A_data_hold[5].ENA
reset => A_data_hold[6].ENA
reset => A_data_hold[7].ENA
reset => A_data_hold[8].ENA
reset => A_data_hold[9].ENA
reset => A_data_hold[10].ENA
reset => A_data_hold[11].ENA
reset => A_data_hold[12].ENA
reset => A_data_hold[13].ENA
reset => A_data_hold[14].ENA
reset => A_data_hold[15].ENA
reset => A_address_hold[0].ENA
reset => A_address_hold[1].ENA
reset => A_address_hold[2].ENA
reset => A_address_hold[3].ENA
reset => A_address_hold[4].ENA
reset => A_address_hold[5].ENA
reset => A_address_hold[6].ENA
reset => A_address_hold[7].ENA
reset => SDRAM_BA[0]~reg0.ENA
reset => SDRAM_BA[1]~reg0.ENA
reset => SDRAM_A[0]~reg0.ENA
reset => SDRAM_A[1]~reg0.ENA
reset => SDRAM_A[2]~reg0.ENA
reset => SDRAM_A[3]~reg0.ENA
reset => SDRAM_A[4]~reg0.ENA
reset => SDRAM_A[5]~reg0.ENA
reset => SDRAM_A[6]~reg0.ENA
reset => SDRAM_A[7]~reg0.ENA
reset => SDRAM_A[8]~reg0.ENA
reset => SDRAM_A[9]~reg0.ENA
reset => SDRAM_A[10]~reg0.ENA
reset => SDRAM_A[11]~reg0.ENA
reset => SDRAM_CMD[0].ENA
reset => SDRAM_CMD[1].ENA
reset => SDRAM_CMD[2].ENA
reset => SDRAM_DQM[0]~reg0.ENA
reset => SDRAM_DQM[1]~reg0.ENA
reset => refresh_flag.ENA
reset => prev_HSYNC.ENA
HSYNC => always0.IN1
HSYNC => prev_HSYNC.DATAIN
A_address[0] => A_address_hold.DATAB
A_address[1] => A_address_hold.DATAB
A_address[2] => A_address_hold.DATAB
A_address[3] => A_address_hold.DATAB
A_address[4] => A_address_hold.DATAB
A_address[5] => A_address_hold.DATAB
A_address[6] => A_address_hold.DATAB
A_address[7] => A_address_hold.DATAB
A_address[8] => Selector13.IN2
A_address[9] => Selector12.IN2
A_address[10] => Selector11.IN2
A_address[11] => Selector10.IN2
A_address[12] => Selector9.IN2
A_address[13] => Selector8.IN2
A_address[14] => Selector7.IN2
A_address[15] => Selector6.IN2
A_address[16] => Selector5.IN3
A_address[17] => Selector4.IN3
A_address[18] => Selector3.IN4
A_address[19] => Selector2.IN3
A_address[20] => Selector15.IN3
A_address[20] => Selector17.IN1
A_address[21] => Selector14.IN3
A_address[21] => Selector16.IN1
A_write => gate_out.DATAB
A_write => Selector0.IN2
A_data_out[0] <= A_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[1] <= A_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[2] <= A_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[3] <= A_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[4] <= A_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[5] <= A_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[6] <= A_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[7] <= A_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[8] <= A_data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[9] <= A_data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[10] <= A_data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[11] <= A_data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[12] <= A_data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[13] <= A_data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[14] <= A_data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_out[15] <= A_data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
A_data_in[0] => A_data_hold.DATAB
A_data_in[1] => A_data_hold.DATAB
A_data_in[2] => A_data_hold.DATAB
A_data_in[3] => A_data_hold.DATAB
A_data_in[4] => A_data_hold.DATAB
A_data_in[5] => A_data_hold.DATAB
A_data_in[6] => A_data_hold.DATAB
A_data_in[7] => A_data_hold.DATAB
A_data_in[8] => A_data_hold.DATAB
A_data_in[9] => A_data_hold.DATAB
A_data_in[10] => A_data_hold.DATAB
A_data_in[11] => A_data_hold.DATAB
A_data_in[12] => A_data_hold.DATAB
A_data_in[13] => A_data_hold.DATAB
A_data_in[14] => A_data_hold.DATAB
A_data_in[15] => A_data_hold.DATAB
B_address[0] => B_address_hold.DATAB
B_address[1] => B_address_hold.DATAB
B_address[2] => B_address_hold.DATAB
B_address[3] => B_address_hold.DATAB
B_address[4] => B_address_hold.DATAB
B_address[5] => B_address_hold.DATAB
B_address[6] => B_address_hold.DATAB
B_address[7] => B_address_hold.DATAB
B_address[8] => Selector13.IN3
B_address[9] => Selector12.IN3
B_address[10] => Selector11.IN3
B_address[11] => Selector10.IN3
B_address[12] => Selector9.IN3
B_address[13] => Selector8.IN3
B_address[14] => Selector7.IN3
B_address[15] => Selector6.IN3
B_address[16] => Selector5.IN4
B_address[17] => Selector4.IN4
B_address[18] => Selector3.IN5
B_address[19] => Selector2.IN4
B_address[20] => Selector15.IN4
B_address[20] => Selector17.IN2
B_address[21] => Selector14.IN4
B_address[21] => Selector16.IN2
B_data_out[0] <= B_data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[1] <= B_data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[2] <= B_data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[3] <= B_data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[4] <= B_data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[5] <= B_data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[6] <= B_data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[7] <= B_data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[8] <= B_data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[9] <= B_data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[10] <= B_data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[11] <= B_data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[12] <= B_data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[13] <= B_data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[14] <= B_data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
B_data_out[15] <= B_data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_CKE <= <VCC>
SDRAM_CSn <= <GND>
SDRAM_WREn <= SDRAM_CMD[0].DB_MAX_OUTPUT_PORT_TYPE
SDRAM_CASn <= SDRAM_CMD[1].DB_MAX_OUTPUT_PORT_TYPE
SDRAM_RASn <= SDRAM_CMD[2].DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[0] <= SDRAM_A[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[1] <= SDRAM_A[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[2] <= SDRAM_A[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[3] <= SDRAM_A[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[4] <= SDRAM_A[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[5] <= SDRAM_A[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[6] <= SDRAM_A[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[7] <= SDRAM_A[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[8] <= SDRAM_A[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[9] <= SDRAM_A[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[10] <= SDRAM_A[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_A[11] <= SDRAM_A[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_BA[0] <= SDRAM_BA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_BA[1] <= SDRAM_BA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_DQM[0] <= SDRAM_DQM[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_DQM[1] <= SDRAM_DQM[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SDRAM_DQ[0] <> SDRAM_DQ[0]
SDRAM_DQ[1] <> SDRAM_DQ[1]
SDRAM_DQ[2] <> SDRAM_DQ[2]
SDRAM_DQ[3] <> SDRAM_DQ[3]
SDRAM_DQ[4] <> SDRAM_DQ[4]
SDRAM_DQ[5] <> SDRAM_DQ[5]
SDRAM_DQ[6] <> SDRAM_DQ[6]
SDRAM_DQ[7] <> SDRAM_DQ[7]
SDRAM_DQ[8] <> SDRAM_DQ[8]
SDRAM_DQ[9] <> SDRAM_DQ[9]
SDRAM_DQ[10] <> SDRAM_DQ[10]
SDRAM_DQ[11] <> SDRAM_DQ[11]
SDRAM_DQ[12] <> SDRAM_DQ[12]
SDRAM_DQ[13] <> SDRAM_DQ[13]
SDRAM_DQ[14] <> SDRAM_DQ[14]
SDRAM_DQ[15] <> SDRAM_DQ[15]


|MC10|MULTIPLEXED_HEX_DRIVER:multiHEX
Clk => frame_clk:frame_clk_inst.Clk
Clk => current_SEG[0].CLK
Clk => current_SEG[1].CLK
Clk => current_SEG[2].CLK
Clk => current_SEG[3].CLK
Clk => HEX_OUT[0]~reg0.CLK
Clk => HEX_OUT[1]~reg0.CLK
Clk => HEX_OUT[2]~reg0.CLK
Clk => HEX_OUT[3]~reg0.CLK
Clk => HEX_OUT[4]~reg0.CLK
Clk => HEX_OUT[5]~reg0.CLK
Clk => HEX_OUT[6]~reg0.CLK
Clk => SEG_SEL[0]~reg0.CLK
Clk => SEG_SEL[1]~reg0.CLK
Clk => SEG_SEL[2]~reg0.CLK
Clk => SEG_SEL[3]~reg0.CLK
SEG0[0] => Mux3.IN0
SEG0[1] => Mux2.IN0
SEG0[2] => Mux1.IN0
SEG0[3] => Mux0.IN0
SEG1[0] => Mux3.IN1
SEG1[1] => Mux2.IN1
SEG1[2] => Mux1.IN1
SEG1[3] => Mux0.IN1
SEG2[0] => Mux3.IN2
SEG2[1] => Mux2.IN2
SEG2[2] => Mux1.IN2
SEG2[3] => Mux0.IN2
SEG3[0] => Mux3.IN3
SEG3[1] => Mux2.IN3
SEG3[2] => Mux1.IN3
SEG3[3] => Mux0.IN3
SEG_SEL[0] <= SEG_SEL[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEG_SEL[1] <= SEG_SEL[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEG_SEL[2] <= SEG_SEL[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SEG_SEL[3] <= SEG_SEL[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[0] <= HEX_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[1] <= HEX_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[2] <= HEX_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[3] <= HEX_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[4] <= HEX_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[5] <= HEX_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX_OUT[6] <= HEX_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MC10|MULTIPLEXED_HEX_DRIVER:multiHEX|hexdriver:hex_inst_0
In[0] => Decoder0.IN3
In[1] => Decoder0.IN2
In[2] => Decoder0.IN1
In[3] => Decoder0.IN0
Out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
Out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
Out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
Out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
Out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
Out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
Out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|MC10|MULTIPLEXED_HEX_DRIVER:multiHEX|frame_clk:frame_clk_inst
Clk => count[0].CLK
Clk => count[1].CLK
Clk => count[2].CLK
Clk => count[3].CLK
Clk => count[4].CLK
Clk => count[5].CLK
Clk => count[6].CLK
Clk => count[7].CLK
Clk => count[8].CLK
Clk => count[9].CLK
Clk => count[10].CLK
Clk => count[11].CLK
Clk => count[12].CLK
Clk => count[13].CLK
Clk => count[14].CLK
Clk => count[15].CLK
Clk => count[16].CLK
Clk => count[17].CLK
seg_count[0] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
seg_count[1] <= count[17].DB_MAX_OUTPUT_PORT_TYPE


|MC10|PS2_keyboard:keyboard
clk => clk.IN1
reset => reset.IN1
ps2_clk => ps2_clk.IN1
ps2_data => ps2_data.IN1
key_code[0] <= keymapper:keymapper_inst.keycode[0]
key_code[1] <= keymapper:keymapper_inst.keycode[1]
key_code[2] <= keymapper:keymapper_inst.keycode[2]
key_code[3] <= keymapper:keymapper_inst.keycode[3]
key_code[4] <= keymapper:keymapper_inst.keycode[4]
key_code[5] <= keymapper:keymapper_inst.keycode[5]
key_code[6] <= keymapper:keymapper_inst.keycode[6]
key_code[7] <= keymapper:keymapper_inst.keycode[7]
debug[0] <= scan_code[0].DB_MAX_OUTPUT_PORT_TYPE
debug[1] <= scan_code[1].DB_MAX_OUTPUT_PORT_TYPE
debug[2] <= scan_code[2].DB_MAX_OUTPUT_PORT_TYPE
debug[3] <= scan_code[3].DB_MAX_OUTPUT_PORT_TYPE
debug[4] <= scan_code[4].DB_MAX_OUTPUT_PORT_TYPE
debug[5] <= scan_code[5].DB_MAX_OUTPUT_PORT_TYPE
debug[6] <= scan_code[6].DB_MAX_OUTPUT_PORT_TYPE
debug[7] <= scan_code[7].DB_MAX_OUTPUT_PORT_TYPE


|MC10|PS2_keyboard:keyboard|ps2_host:ps2_host_inst
sys_clk => sys_clk.IN2
sys_rst => sys_rst.IN2
ps2_clk => ps2_clk.IN1
ps2_data => ps2_data.IN1
rx_data[0] <= ps2_host_rx:ps2_host_rx.rx_data
rx_data[1] <= ps2_host_rx:ps2_host_rx.rx_data
rx_data[2] <= ps2_host_rx:ps2_host_rx.rx_data
rx_data[3] <= ps2_host_rx:ps2_host_rx.rx_data
rx_data[4] <= ps2_host_rx:ps2_host_rx.rx_data
rx_data[5] <= ps2_host_rx:ps2_host_rx.rx_data
rx_data[6] <= ps2_host_rx:ps2_host_rx.rx_data
rx_data[7] <= ps2_host_rx:ps2_host_rx.rx_data
ready <= ps2_host_rx:ps2_host_rx.ready
error <= ps2_host_rx:ps2_host_rx.error


|MC10|PS2_keyboard:keyboard|ps2_host:ps2_host_inst|ps2_host_clk_ctrl:ps2_host_clk_ctrl
sys_clk => ps2_clk_samples[0].CLK
sys_clk => ps2_clk_samples[1].CLK
sys_rst => ps2_clk_samples.OUTPUTSELECT
sys_rst => ps2_clk_samples.OUTPUTSELECT
ps2_clk => ps2_clk_samples.DATAA
ps2_clk_posedge <= ps2_clk_posedge.DB_MAX_OUTPUT_PORT_TYPE
ps2_clk_negedge <= ps2_clk_negedge.DB_MAX_OUTPUT_PORT_TYPE


|MC10|PS2_keyboard:keyboard|ps2_host:ps2_host_inst|ps2_host_rx:ps2_host_rx
sys_clk => error~reg0.CLK
sys_clk => rx_data[0]~reg0.CLK
sys_clk => rx_data[1]~reg0.CLK
sys_clk => rx_data[2]~reg0.CLK
sys_clk => rx_data[3]~reg0.CLK
sys_clk => rx_data[4]~reg0.CLK
sys_clk => rx_data[5]~reg0.CLK
sys_clk => rx_data[6]~reg0.CLK
sys_clk => rx_data[7]~reg0.CLK
sys_clk => ready~reg0.CLK
sys_clk => frame[0].CLK
sys_clk => frame[1].CLK
sys_clk => frame[2].CLK
sys_clk => frame[3].CLK
sys_clk => frame[4].CLK
sys_clk => frame[5].CLK
sys_clk => frame[6].CLK
sys_clk => frame[7].CLK
sys_clk => frame[8].CLK
sys_clk => frame[9].CLK
sys_clk => frame[10].CLK
sys_clk => frame[11].CLK
sys_rst => always0.IN1
sys_rst => ready.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => rx_data.OUTPUTSELECT
sys_rst => error.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_clk_negedge => frame.OUTPUTSELECT
ps2_data => frame.DATAB
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
error <= error~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MC10|PS2_keyboard:keyboard|keymapper:keymapper_inst
scan_code[0] => Decoder0.IN7
scan_code[1] => Decoder0.IN6
scan_code[2] => Decoder0.IN5
scan_code[3] => Decoder0.IN4
scan_code[4] => Decoder0.IN3
scan_code[5] => Decoder0.IN2
scan_code[6] => Decoder0.IN1
scan_code[7] => Decoder0.IN0
shift_key => caps.IN0
shift_key => control_out.OUTPUTSELECT
shift_key => shift_out.OUTPUTSELECT
shift_key => shift_out.OUTPUTSELECT
shift_key => Selector2.IN18
shift_key => Selector5.IN10
shift_key => Selector2.IN19
shift_key => Selector4.IN8
shift_key => Selector1.IN11
shift_key => Selector1.IN12
shift_key => Selector3.IN2
shift_key => Selector3.IN3
shift_key => Selector0.IN2
shift_key => Selector0.IN3
shift_key => Selector1.IN2
shift_key => Selector2.IN2
shift_key => Selector2.IN3
shift_key => Selector2.IN4
shift_key => Selector2.IN5
control_key => control_out.IN0
caps_lock => caps.IN1
alt_key => control_out.IN1
special_make => control_out.OUTPUTSELECT
special_make => Selector2.IN20
special_make => Selector0.IN15
special_make => Selector1.IN13
special_make => Selector2.IN21
special_make => Selector4.IN9
special_make => Selector2.IN22
special_make => Selector4.IN10
special_make => Selector5.IN11
special_make => Selector2.IN23
special_make => Selector4.IN11
special_make => Selector3.IN4
special_make => Selector3.IN5
special_make => Selector3.IN6
special_make => Selector3.IN7
special_make => Selector3.IN8
special_make => Selector5.IN2
special_make => Selector5.IN3
special_make => Selector0.IN4
special_make => Selector0.IN5
special_make => Selector0.IN6
special_make => Selector1.IN3
keycode[0] <= Selector2.DB_MAX_OUTPUT_PORT_TYPE
keycode[1] <= Selector1.DB_MAX_OUTPUT_PORT_TYPE
keycode[2] <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
keycode[3] <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
keycode[4] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
keycode[5] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
keycode[6] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
keycode[7] <= Selector7.DB_MAX_OUTPUT_PORT_TYPE


|MC10|KEY_MATRIX:MATRIX
row_select[0] => Equal0.IN7
row_select[1] => Equal0.IN6
row_select[2] => Equal0.IN5
row_select[3] => Equal0.IN4
row_select[4] => Equal0.IN3
row_select[5] => Equal0.IN2
row_select[6] => Equal0.IN1
row_select[7] => Equal0.IN0
key_code[0] => Decoder1.IN2
key_code[1] => Decoder1.IN1
key_code[2] => Decoder1.IN0
key_code[3] => ~NO_FANOUT~
key_code[4] => Decoder0.IN2
key_code[5] => Decoder0.IN1
key_code[6] => Decoder0.IN0
key_code[7] => ~NO_FANOUT~
key_out[0] <= key_out.DB_MAX_OUTPUT_PORT_TYPE
key_out[1] <= key_out.DB_MAX_OUTPUT_PORT_TYPE
key_out[2] <= key_out.DB_MAX_OUTPUT_PORT_TYPE
key_out[3] <= key_out.DB_MAX_OUTPUT_PORT_TYPE
key_out[4] <= key_out.DB_MAX_OUTPUT_PORT_TYPE
key_out[5] <= key_out.DB_MAX_OUTPUT_PORT_TYPE
key_out[6] <= key_out.DB_MAX_OUTPUT_PORT_TYPE
key_out[7] <= key_out.DB_MAX_OUTPUT_PORT_TYPE


|MC10|MC6803_gen2:CPU0
clk => clk.IN2
RST => RST.IN1
hold => hold_s.DATAA
halt => halt_s.DATAA
irq => irq_s.DATAA
nmi => nmi_s.DATAA
PORT_A_IN[0] => PORT_A_IN_s[0].DATAIN
PORT_A_IN[1] => PORT_A_IN_s[1].DATAIN
PORT_A_IN[2] => PORT_A_IN_s[2].DATAIN
PORT_A_IN[3] => PORT_A_IN_s[3].DATAIN
PORT_A_IN[4] => PORT_A_IN_s[4].DATAIN
PORT_A_IN[5] => PORT_A_IN_s[5].DATAIN
PORT_A_IN[6] => PORT_A_IN_s[6].DATAIN
PORT_A_IN[7] => PORT_A_IN_s[7].DATAIN
PORT_B_IN[0] => PORT_B_IN_s[0].DATAIN
PORT_B_IN[1] => PORT_B_IN_s[1].DATAIN
PORT_B_IN[2] => PORT_B_IN_s[2].DATAIN
PORT_B_IN[3] => PORT_B_IN_s[3].DATAIN
PORT_B_IN[4] => PORT_B_IN_s[4].DATAIN
DATA_IN[0] => DATA_IN_s[0].DATAIN
DATA_IN[1] => DATA_IN_s[1].DATAIN
DATA_IN[2] => DATA_IN_s[2].DATAIN
DATA_IN[3] => DATA_IN_s[3].DATAIN
DATA_IN[4] => DATA_IN_s[4].DATAIN
DATA_IN[5] => DATA_IN_s[5].DATAIN
DATA_IN[6] => DATA_IN_s[6].DATAIN
DATA_IN[7] => DATA_IN_s[7].DATAIN
PORT_A_OUT[0] <= PORT_A_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_A_OUT[1] <= PORT_A_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_A_OUT[2] <= PORT_A_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_A_OUT[3] <= PORT_A_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_A_OUT[4] <= PORT_A_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_A_OUT[5] <= PORT_A_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_A_OUT[6] <= PORT_A_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_A_OUT[7] <= PORT_A_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_B_OUT[0] <= PORT_B_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_B_OUT[1] <= PORT_B_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_B_OUT[2] <= PORT_B_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_B_OUT[3] <= PORT_B_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PORT_B_OUT[4] <= PORT_B_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[0] <= ADDRESS[0].DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[1] <= ADDRESS[1].DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[2] <= ADDRESS[2].DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[3] <= ADDRESS[3].DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[4] <= ADDRESS[4].DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[5] <= ADDRESS[5].DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[6] <= ADDRESS[6].DB_MAX_OUTPUT_PORT_TYPE
ADDRESS[7] <= cpu01:cpu01_inst.address
ADDRESS[8] <= cpu01:cpu01_inst.address
ADDRESS[9] <= cpu01:cpu01_inst.address
ADDRESS[10] <= cpu01:cpu01_inst.address
ADDRESS[11] <= cpu01:cpu01_inst.address
ADDRESS[12] <= cpu01:cpu01_inst.address
ADDRESS[13] <= cpu01:cpu01_inst.address
ADDRESS[14] <= cpu01:cpu01_inst.address
ADDRESS[15] <= cpu01:cpu01_inst.address
DATA_OUT[0] <= DATA_OUT[0].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[1] <= DATA_OUT[1].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[2] <= DATA_OUT[2].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[3] <= DATA_OUT[3].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[4] <= DATA_OUT[4].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[5] <= DATA_OUT[5].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[6] <= DATA_OUT[6].DB_MAX_OUTPUT_PORT_TYPE
DATA_OUT[7] <= DATA_OUT[7].DB_MAX_OUTPUT_PORT_TYPE
E_CLK <= cpu01:cpu01_inst.vma
rw <= cpu01:cpu01_inst.rw


|MC10|MC6803_gen2:CPU0|cpu01:cpu01_inst
clk => nmi_ack.CLK
clk => nmi_req.CLK
clk => op_code[0].CLK
clk => op_code[1].CLK
clk => op_code[2].CLK
clk => op_code[3].CLK
clk => op_code[4].CLK
clk => op_code[5].CLK
clk => op_code[6].CLK
clk => op_code[7].CLK
clk => iv[0].CLK
clk => iv[1].CLK
clk => iv[2].CLK
clk => cc[0].CLK
clk => cc[1].CLK
clk => cc[2].CLK
clk => cc[3].CLK
clk => cc[4].CLK
clk => cc[5].CLK
clk => cc[6].CLK
clk => cc[7].CLK
clk => md[0].CLK
clk => md[1].CLK
clk => md[2].CLK
clk => md[3].CLK
clk => md[4].CLK
clk => md[5].CLK
clk => md[6].CLK
clk => md[7].CLK
clk => md[8].CLK
clk => md[9].CLK
clk => md[10].CLK
clk => md[11].CLK
clk => md[12].CLK
clk => md[13].CLK
clk => md[14].CLK
clk => md[15].CLK
clk => sp[0].CLK
clk => sp[1].CLK
clk => sp[2].CLK
clk => sp[3].CLK
clk => sp[4].CLK
clk => sp[5].CLK
clk => sp[6].CLK
clk => sp[7].CLK
clk => sp[8].CLK
clk => sp[9].CLK
clk => sp[10].CLK
clk => sp[11].CLK
clk => sp[12].CLK
clk => sp[13].CLK
clk => sp[14].CLK
clk => sp[15].CLK
clk => xreg[0].CLK
clk => xreg[1].CLK
clk => xreg[2].CLK
clk => xreg[3].CLK
clk => xreg[4].CLK
clk => xreg[5].CLK
clk => xreg[6].CLK
clk => xreg[7].CLK
clk => xreg[8].CLK
clk => xreg[9].CLK
clk => xreg[10].CLK
clk => xreg[11].CLK
clk => xreg[12].CLK
clk => xreg[13].CLK
clk => xreg[14].CLK
clk => xreg[15].CLK
clk => accb[0].CLK
clk => accb[1].CLK
clk => accb[2].CLK
clk => accb[3].CLK
clk => accb[4].CLK
clk => accb[5].CLK
clk => accb[6].CLK
clk => accb[7].CLK
clk => acca[0].CLK
clk => acca[1].CLK
clk => acca[2].CLK
clk => acca[3].CLK
clk => acca[4].CLK
clk => acca[5].CLK
clk => acca[6].CLK
clk => acca[7].CLK
clk => ea[0].CLK
clk => ea[1].CLK
clk => ea[2].CLK
clk => ea[3].CLK
clk => ea[4].CLK
clk => ea[5].CLK
clk => ea[6].CLK
clk => ea[7].CLK
clk => ea[8].CLK
clk => ea[9].CLK
clk => ea[10].CLK
clk => ea[11].CLK
clk => ea[12].CLK
clk => ea[13].CLK
clk => ea[14].CLK
clk => ea[15].CLK
clk => pc[0].CLK
clk => pc[1].CLK
clk => pc[2].CLK
clk => pc[3].CLK
clk => pc[4].CLK
clk => pc[5].CLK
clk => pc[6].CLK
clk => pc[7].CLK
clk => pc[8].CLK
clk => pc[9].CLK
clk => pc[10].CLK
clk => pc[11].CLK
clk => pc[12].CLK
clk => pc[13].CLK
clk => pc[14].CLK
clk => pc[15].CLK
clk => state~2.DATAIN
rst => nmi_req.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rw <= rw.DB_MAX_OUTPUT_PORT_TYPE
vma <= WideOr172.DB_MAX_OUTPUT_PORT_TYPE
address[0] <= Selector15.DB_MAX_OUTPUT_PORT_TYPE
address[1] <= Selector14.DB_MAX_OUTPUT_PORT_TYPE
address[2] <= Selector13.DB_MAX_OUTPUT_PORT_TYPE
address[3] <= Selector12.DB_MAX_OUTPUT_PORT_TYPE
address[4] <= Selector11.DB_MAX_OUTPUT_PORT_TYPE
address[5] <= Selector10.DB_MAX_OUTPUT_PORT_TYPE
address[6] <= Selector9.DB_MAX_OUTPUT_PORT_TYPE
address[7] <= Selector8.DB_MAX_OUTPUT_PORT_TYPE
address[8] <= Selector7.DB_MAX_OUTPUT_PORT_TYPE
address[9] <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
address[10] <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
address[11] <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
address[12] <= Selector3.DB_MAX_OUTPUT_PORT_TYPE
address[13] <= Selector2.DB_MAX_OUTPUT_PORT_TYPE
address[14] <= Selector1.DB_MAX_OUTPUT_PORT_TYPE
address[15] <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => Selector32.IN2
data_in[0] => Selector40.IN2
data_in[0] => Selector57.IN3
data_in[0] => Selector65.IN2
data_in[0] => Selector73.IN2
data_in[0] => Selector81.IN2
data_in[0] => Selector89.IN2
data_in[0] => Selector105.IN4
data_in[0] => Selector113.IN2
data_in[0] => Selector124.IN2
data_in[1] => Selector31.IN2
data_in[1] => Selector39.IN2
data_in[1] => Selector56.IN3
data_in[1] => Selector64.IN2
data_in[1] => Selector72.IN2
data_in[1] => Selector80.IN2
data_in[1] => Selector88.IN2
data_in[1] => Selector104.IN3
data_in[1] => Selector112.IN2
data_in[1] => Selector123.IN2
data_in[2] => Selector30.IN2
data_in[2] => Selector38.IN2
data_in[2] => Selector55.IN3
data_in[2] => Selector63.IN2
data_in[2] => Selector71.IN2
data_in[2] => Selector79.IN2
data_in[2] => Selector87.IN2
data_in[2] => Selector103.IN3
data_in[2] => Selector111.IN2
data_in[2] => Selector122.IN2
data_in[3] => Selector29.IN2
data_in[3] => Selector37.IN2
data_in[3] => Selector54.IN3
data_in[3] => Selector62.IN2
data_in[3] => Selector70.IN2
data_in[3] => Selector78.IN2
data_in[3] => Selector86.IN2
data_in[3] => Selector102.IN3
data_in[3] => Selector110.IN2
data_in[3] => Selector121.IN2
data_in[4] => Selector28.IN2
data_in[4] => Selector36.IN2
data_in[4] => Selector53.IN3
data_in[4] => Selector61.IN2
data_in[4] => Selector69.IN2
data_in[4] => Selector77.IN2
data_in[4] => Selector85.IN2
data_in[4] => Selector101.IN3
data_in[4] => Selector109.IN2
data_in[4] => Selector120.IN2
data_in[5] => Selector27.IN2
data_in[5] => Selector35.IN2
data_in[5] => Selector52.IN3
data_in[5] => Selector60.IN2
data_in[5] => Selector68.IN2
data_in[5] => Selector76.IN2
data_in[5] => Selector84.IN2
data_in[5] => Selector100.IN3
data_in[5] => Selector108.IN2
data_in[5] => Selector119.IN2
data_in[6] => Selector26.IN2
data_in[6] => Selector34.IN2
data_in[6] => Selector51.IN3
data_in[6] => Selector59.IN2
data_in[6] => Selector67.IN2
data_in[6] => Selector75.IN2
data_in[6] => Selector83.IN2
data_in[6] => Selector99.IN3
data_in[6] => Selector107.IN2
data_in[6] => Selector118.IN2
data_in[7] => Selector25.IN2
data_in[7] => Selector33.IN2
data_in[7] => Selector50.IN3
data_in[7] => Selector58.IN2
data_in[7] => Selector66.IN2
data_in[7] => Selector74.IN2
data_in[7] => Selector82.IN2
data_in[7] => Selector98.IN3
data_in[7] => Selector106.IN2
data_in[7] => Selector117.IN2
data_out[0] <= Selector23.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= Selector22.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= Selector21.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= Selector20.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= Selector19.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= Selector18.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= Selector17.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= Selector16.DB_MAX_OUTPUT_PORT_TYPE
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => state.OUTPUTSELECT
hold => md[4].ENA
hold => md[3].ENA
hold => md[2].ENA
hold => pc[0].ENA
hold => ea[0].ENA
hold => md[1].ENA
hold => acca[0].ENA
hold => accb[0].ENA
hold => xreg[0].ENA
hold => sp[0].ENA
hold => md[0].ENA
hold => cc[0].ENA
hold => iv[0].ENA
hold => cc[7].ENA
hold => cc[6].ENA
hold => op_code[0].ENA
hold => nmi_req.ENA
hold => cc[5].ENA
hold => cc[4].ENA
hold => cc[3].ENA
hold => cc[2].ENA
hold => cc[1].ENA
hold => iv[2].ENA
hold => iv[1].ENA
hold => op_code[7].ENA
hold => op_code[6].ENA
hold => op_code[5].ENA
hold => op_code[4].ENA
hold => op_code[3].ENA
hold => op_code[2].ENA
hold => op_code[1].ENA
hold => nmi_ack.ENA
hold => md[5].ENA
hold => md[6].ENA
hold => md[7].ENA
hold => md[8].ENA
hold => md[9].ENA
hold => md[10].ENA
hold => md[11].ENA
hold => md[12].ENA
hold => md[13].ENA
hold => md[14].ENA
hold => md[15].ENA
hold => sp[1].ENA
hold => sp[2].ENA
hold => sp[3].ENA
hold => sp[4].ENA
hold => sp[5].ENA
hold => sp[6].ENA
hold => sp[7].ENA
hold => sp[8].ENA
hold => sp[9].ENA
hold => sp[10].ENA
hold => sp[11].ENA
hold => sp[12].ENA
hold => sp[13].ENA
hold => sp[14].ENA
hold => sp[15].ENA
hold => xreg[1].ENA
hold => xreg[2].ENA
hold => xreg[3].ENA
hold => xreg[4].ENA
hold => xreg[5].ENA
hold => xreg[6].ENA
hold => xreg[7].ENA
hold => xreg[8].ENA
hold => xreg[9].ENA
hold => xreg[10].ENA
hold => xreg[11].ENA
hold => xreg[12].ENA
hold => xreg[13].ENA
hold => xreg[14].ENA
hold => xreg[15].ENA
hold => accb[1].ENA
hold => accb[2].ENA
hold => accb[3].ENA
hold => accb[4].ENA
hold => accb[5].ENA
hold => accb[6].ENA
hold => accb[7].ENA
hold => acca[1].ENA
hold => acca[2].ENA
hold => acca[3].ENA
hold => acca[4].ENA
hold => acca[5].ENA
hold => acca[6].ENA
hold => acca[7].ENA
hold => ea[1].ENA
hold => ea[2].ENA
hold => ea[3].ENA
hold => ea[4].ENA
hold => ea[5].ENA
hold => ea[6].ENA
hold => ea[7].ENA
hold => ea[8].ENA
hold => ea[9].ENA
hold => ea[10].ENA
hold => ea[11].ENA
hold => ea[12].ENA
hold => ea[13].ENA
hold => ea[14].ENA
hold => ea[15].ENA
hold => pc[1].ENA
hold => pc[2].ENA
hold => pc[3].ENA
hold => pc[4].ENA
hold => pc[5].ENA
hold => pc[6].ENA
hold => pc[7].ENA
hold => pc[8].ENA
hold => pc[9].ENA
hold => pc[10].ENA
hold => pc[11].ENA
hold => pc[12].ENA
hold => pc[13].ENA
hold => pc[14].ENA
hold => pc[15].ENA
halt => pc_ctrl.OUTPUTSELECT
halt => nmi_ctrl.OUTPUTSELECT
halt => nmi_ctrl.OUTPUTSELECT
halt => next_state.OUTPUTSELECT
halt => next_state.OUTPUTSELECT
halt => Selector272.IN1
halt => Selector268.IN7
irq => always19.IN0
irq => always19.IN1
nmi => always17.IN1
nmi => always17.IN1
irq_icf => always19.IN1
irq_icf => always19.IN1
irq_ocf => always19.IN1
irq_ocf => always19.IN1
irq_tof => always19.IN1
irq_tof => always19.IN1
irq_sci => always19.IN1
irq_sci => always19.IN1


|MC10|MC6803_gen2:CPU0|MEM_128_8:iMEM
address[0] => REGS.waddr_a[0].DATAIN
address[0] => REGS.WADDR
address[0] => REGS.RADDR
address[1] => REGS.waddr_a[1].DATAIN
address[1] => REGS.WADDR1
address[1] => REGS.RADDR1
address[2] => REGS.waddr_a[2].DATAIN
address[2] => REGS.WADDR2
address[2] => REGS.RADDR2
address[3] => REGS.waddr_a[3].DATAIN
address[3] => REGS.WADDR3
address[3] => REGS.RADDR3
address[4] => REGS.waddr_a[4].DATAIN
address[4] => REGS.WADDR4
address[4] => REGS.RADDR4
address[5] => REGS.waddr_a[5].DATAIN
address[5] => REGS.WADDR5
address[5] => REGS.RADDR5
address[6] => REGS.waddr_a[6].DATAIN
address[6] => REGS.WADDR6
address[6] => REGS.RADDR6
RW => REGS.we_a.DATAIN
RW => REGS.WE
Clk => REGS.we_a.CLK
Clk => REGS.waddr_a[6].CLK
Clk => REGS.waddr_a[5].CLK
Clk => REGS.waddr_a[4].CLK
Clk => REGS.waddr_a[3].CLK
Clk => REGS.waddr_a[2].CLK
Clk => REGS.waddr_a[1].CLK
Clk => REGS.waddr_a[0].CLK
Clk => REGS.data_a[7].CLK
Clk => REGS.data_a[6].CLK
Clk => REGS.data_a[5].CLK
Clk => REGS.data_a[4].CLK
Clk => REGS.data_a[3].CLK
Clk => REGS.data_a[2].CLK
Clk => REGS.data_a[1].CLK
Clk => REGS.data_a[0].CLK
Clk => data_out[0]~reg0.CLK
Clk => data_out[1]~reg0.CLK
Clk => data_out[2]~reg0.CLK
Clk => data_out[3]~reg0.CLK
Clk => data_out[4]~reg0.CLK
Clk => data_out[5]~reg0.CLK
Clk => data_out[6]~reg0.CLK
Clk => data_out[7]~reg0.CLK
Clk => REGS.CLK0
data_in[0] => REGS.data_a[0].DATAIN
data_in[0] => REGS.DATAIN
data_in[1] => REGS.data_a[1].DATAIN
data_in[1] => REGS.DATAIN1
data_in[2] => REGS.data_a[2].DATAIN
data_in[2] => REGS.DATAIN2
data_in[3] => REGS.data_a[3].DATAIN
data_in[3] => REGS.DATAIN3
data_in[4] => REGS.data_a[4].DATAIN
data_in[4] => REGS.DATAIN4
data_in[5] => REGS.data_a[5].DATAIN
data_in[5] => REGS.DATAIN5
data_in[6] => REGS.data_a[6].DATAIN
data_in[6] => REGS.DATAIN6
data_in[7] => REGS.data_a[7].DATAIN
data_in[7] => REGS.DATAIN7
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MC10|MC6847_gen3:VDG
clk_25 => clk_25.IN1
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => pixel_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => line_count.OUTPUTSELECT
reset => active_rows.OUTPUTSELECT
reset => active_area.OUTPUTSELECT
reset => horiz_scaler.OUTPUTSELECT
reset => horiz_scaler.OUTPUTSELECT
reset => horiz_scaler.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => col_count.OUTPUTSELECT
reset => cell_line.OUTPUTSELECT
reset => cell_line.OUTPUTSELECT
reset => cell_line.OUTPUTSELECT
reset => cell_line.OUTPUTSELECT
reset => cell_count.OUTPUTSELECT
reset => cell_count.OUTPUTSELECT
reset => cell_count.OUTPUTSELECT
reset => cell_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => row_count.OUTPUTSELECT
reset => vert_scaler.OUTPUTSELECT
reset => vert_scaler.OUTPUTSELECT
reset => vert_scaler.OUTPUTSELECT
AG => AG_s.DATAB
SA => SA_s.DATAB
INV => INV_s.DATAB
DD[0] => DD[0].IN1
DD[1] => DD[1].IN1
DD[2] => DD[2].IN1
DD[3] => DD[3].IN1
DD[4] => DD[4].IN1
DD[5] => DD[5].IN1
DD[6] => DD_s.DATAB
DD[7] => DD_s.DATAB
DA[0] <= DA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[1] <= DA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[2] <= DA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[3] <= DA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[4] <= DA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[5] <= DA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[6] <= DA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[7] <= DA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[8] <= DA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[9] <= DA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[10] <= DA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[11] <= DA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[12] <= DA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA[13] <= DA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
R <= R~reg0.DB_MAX_OUTPUT_PORT_TYPE
G <= G~reg0.DB_MAX_OUTPUT_PORT_TYPE
B <= B~reg0.DB_MAX_OUTPUT_PORT_TYPE
HSYNC <= HSYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE
VSYNC <= VSYNC~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MC10|MC6847_gen3:VDG|CHR_ROM:CHR_inst
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
address[9] => address[9].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|MC10|MC6847_gen3:VDG|CHR_ROM:CHR_inst|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_gba1:auto_generated.address_a[0]
address_a[1] => altsyncram_gba1:auto_generated.address_a[1]
address_a[2] => altsyncram_gba1:auto_generated.address_a[2]
address_a[3] => altsyncram_gba1:auto_generated.address_a[3]
address_a[4] => altsyncram_gba1:auto_generated.address_a[4]
address_a[5] => altsyncram_gba1:auto_generated.address_a[5]
address_a[6] => altsyncram_gba1:auto_generated.address_a[6]
address_a[7] => altsyncram_gba1:auto_generated.address_a[7]
address_a[8] => altsyncram_gba1:auto_generated.address_a[8]
address_a[9] => altsyncram_gba1:auto_generated.address_a[9]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_gba1:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_gba1:auto_generated.q_a[0]
q_a[1] <= altsyncram_gba1:auto_generated.q_a[1]
q_a[2] <= altsyncram_gba1:auto_generated.q_a[2]
q_a[3] <= altsyncram_gba1:auto_generated.q_a[3]
q_a[4] <= altsyncram_gba1:auto_generated.q_a[4]
q_a[5] <= altsyncram_gba1:auto_generated.q_a[5]
q_a[6] <= altsyncram_gba1:auto_generated.q_a[6]
q_a[7] <= altsyncram_gba1:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|MC10|MC6847_gen3:VDG|CHR_ROM:CHR_inst|altsyncram:altsyncram_component|altsyncram_gba1:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_a[9] => ram_block1a0.PORTAADDR9
address_a[9] => ram_block1a1.PORTAADDR9
address_a[9] => ram_block1a2.PORTAADDR9
address_a[9] => ram_block1a3.PORTAADDR9
address_a[9] => ram_block1a4.PORTAADDR9
address_a[9] => ram_block1a5.PORTAADDR9
address_a[9] => ram_block1a6.PORTAADDR9
address_a[9] => ram_block1a7.PORTAADDR9
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


